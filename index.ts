import "dotenv/config";
import { Command, Option } from "commander";

import { version } from "./package.json";
import { getModels } from "./models";
import { getAgents } from "./agents";
import { ProcessPhase } from "./types";
import { generateResponse } from "./lib/generate";

const program = new Command();

program
  .name("string-util")
  .description("CoTask CLI - AI Assistant for coding tasks in your codebase.")
  .version(version);

program
  .command("run")
  .description("Runs a task defined by the user.")
  .argument(
    "<task definition>",
    "High level goals of the task, what you want to achieve.",
  )
  .addOption(
    new Option(
      "--unsafe-command",
      "Executes commands generated by CoTask without user approval.",
    ),
  )
  .action(async (taskDefinition: string) => {
    console.log("Running task with definition: ", taskDefinition);

    const models = await getModels();
    const agents = await getAgents(models);

    const planAgent = agents[ProcessPhase.Plan];

    const response = await generateResponse(
      [
        {
          role: "user",
          content: planAgent.toUserPrompt({
            task: taskDefinition,
            requiredOutput:
              "A step-by-step plan for the development and research team.",
          }),
        },
      ],
      {
        model: planAgent.model,
        systemPrompt: planAgent.prompt,
        tools: planAgent.tools,
      },
    );

    console.log("[PLANER]", response.content ?? "");

    process.exit(0);
  });

program.parse();
